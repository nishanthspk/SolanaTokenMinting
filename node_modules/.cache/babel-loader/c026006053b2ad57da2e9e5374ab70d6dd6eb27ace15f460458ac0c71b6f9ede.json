{"ast":null,"code":"/** @internal */\nexport function addSigners(keys, ownerOrAuthority, multiSigners) {\n  if (multiSigners.length) {\n    keys.push({\n      pubkey: ownerOrAuthority,\n      isSigner: false,\n      isWritable: false\n    });\n    for (const signer of multiSigners) {\n      keys.push({\n        pubkey: signer.publicKey,\n        isSigner: true,\n        isWritable: false\n      });\n    }\n  } else {\n    keys.push({\n      pubkey: ownerOrAuthority,\n      isSigner: true,\n      isWritable: false\n    });\n  }\n  return keys;\n}","map":{"version":3,"names":["addSigners","keys","ownerOrAuthority","multiSigners","length","push","pubkey","isSigner","isWritable","signer","publicKey"],"sources":["/home/spkn/spkn1/token5/node_modules/@solana/spl-token/src/instructions/internal.ts"],"sourcesContent":["import { AccountMeta, PublicKey, Signer } from '@solana/web3.js';\n\n/** @internal */\nexport function addSigners(keys: AccountMeta[], ownerOrAuthority: PublicKey, multiSigners: Signer[]): AccountMeta[] {\n    if (multiSigners.length) {\n        keys.push({ pubkey: ownerOrAuthority, isSigner: false, isWritable: false });\n        for (const signer of multiSigners) {\n            keys.push({ pubkey: signer.publicKey, isSigner: true, isWritable: false });\n        }\n    } else {\n        keys.push({ pubkey: ownerOrAuthority, isSigner: true, isWritable: false });\n    }\n    return keys;\n}\n"],"mappings":"AAEA;AACA,OAAM,SAAUA,UAAUA,CAACC,IAAmB,EAAEC,gBAA2B,EAAEC,YAAsB;EAC/F,IAAIA,YAAY,CAACC,MAAM,EAAE;IACrBH,IAAI,CAACI,IAAI,CAAC;MAAEC,MAAM,EAAEJ,gBAAgB;MAAEK,QAAQ,EAAE,KAAK;MAAEC,UAAU,EAAE;IAAK,CAAE,CAAC;IAC3E,KAAK,MAAMC,MAAM,IAAIN,YAAY,EAAE;MAC/BF,IAAI,CAACI,IAAI,CAAC;QAAEC,MAAM,EAAEG,MAAM,CAACC,SAAS;QAAEH,QAAQ,EAAE,IAAI;QAAEC,UAAU,EAAE;MAAK,CAAE,CAAC;;GAEjF,MAAM;IACHP,IAAI,CAACI,IAAI,CAAC;MAAEC,MAAM,EAAEJ,gBAAgB;MAAEK,QAAQ,EAAE,IAAI;MAAEC,UAAU,EAAE;IAAK,CAAE,CAAC;;EAE9E,OAAOP,IAAI;AACf","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}